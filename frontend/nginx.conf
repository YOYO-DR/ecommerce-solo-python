# Archivo: nginx.conf (para usar con Dokploy/Traefik manejando HTTPS externamente)

server {
    # Escucha en el puerto 83 (HTTP), como espera Dokploy/Traefik
    listen 83;
    listen [::]:83; # Escucha también en IPv6

    # La directiva server_name es menos crítica aquí, ya que Traefik
    # se encarga del enrutamiento basado en dominio.
    # Puedes comentarla o dejarla si quieres.
    # server_name tu-dominio.com www.tu-dominio.com;

    # --- Raíz de Documentos ---
    # Correcto según tu Dockerfile
    root /usr/share/nginx/html;
    index index.html index.htm;

    # --- Compresión (Aún recomendable) ---
    # Comprimir la respuesta antes de enviarla a Traefik sigue siendo beneficioso
    gzip on;
    gzip_vary on;
    gzip_proxied any; # Importante si estás detrás de un proxy como Traefik
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # --- Cache de Assets (Aún recomendable) ---
    # Las cabeceras de caché para el navegador del cliente final son importantes
    location ~* \.(?:css|js|map|jpe?g|png|gif|ico|svg|webp|woff|woff2|ttf|eot)$ {
        # No necesitas 'public' aquí si Traefik podría cachear, pero max-age e immutable son para el navegador.
        add_header Cache-Control "max-age=31536000, immutable";
        expires 1y;
        access_log off;
    }

    # --- Cabeceras de Seguridad (¡Aún importantes!) ---
    # Aunque Traefik maneja HTTPS, estas cabeceras instruyen al navegador del cliente final.
    # Traefik puede añadir algunas, pero es bueno tenerlas aquí como respaldo o por si Traefik no las añade todas.
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    # La CSP sigue siendo muy relevante para proteger contra XSS
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; font-src 'self';" always; # ¡Ajustar!

    # --- Logging ---
    # Nginx en Docker usualmente loguea a stdout/stderr, lo cual Dokploy/Docker capturan.
    # Puedes mantenerlos comentados a menos que necesites archivos de log separados dentro del contenedor.
    # access_log /var/log/nginx/access.log;
    # error_log /var/log/nginx/error.log warn;

    # --- Protección Archivos Sensibles ---
    location ~ /\. { deny all; }
    location ~* /(?:package\.json|vite\.config\.js|\.env)$ { deny all; }

    # --- Health Check (Opcional, útil para Dokploy/Traefik) ---
    # Un endpoint simple que Traefik puede usar para verificar si tu app está viva.
    location /healthz {
      access_log off; # No loguear los health checks
      return 200 "OK";
      # Añadir cabecera para evitar cacheo del health check
      add_header Content-Type text/plain;
      add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # ===========================================================
    # === Bloque para redirigir peticiones API a Django ===
    # ===========================================================
    # IMPORTANTE: Este bloque debe ir ANTES del bloque location / { ... }
    location /api {
        # La URL del servicio backend (asumiendo que 'django' es el nombre del servicio
        # en tu red Docker y escucha en el puerto 446)
        # ¡SIN barra al final para pasar la URI completa /api/... al backend!
        proxy_pass http://django:446;

        # Cabeceras importantes para pasar al backend (Django/Gunicorn)
        proxy_set_header Host $host; # Pasa el host original solicitado por el cliente
        proxy_set_header X-Real-IP $remote_addr; # IP del cliente directo (será Traefik)
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Cadena de IPs de proxies
        # Informa al backend que la conexión original fue HTTPS (asumiendo que Traefik maneja TLS)
        proxy_set_header X-Forwarded-Proto https;

        # Otras directivas útiles para proxy
        proxy_redirect off; # No dejar que Nginx reescriba redirecciones del backend
        proxy_buffering off; # Puede ser útil para streaming o Server-Sent Events
    }

    # --- Manejo de Rutas SPA (React Router) ---
    # Esto sigue siendo esencial
    location / {
        try_files $uri $uri/ /index.html;
    }

}